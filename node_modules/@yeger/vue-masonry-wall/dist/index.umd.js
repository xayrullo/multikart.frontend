(function(e,u){typeof exports=="object"&&typeof module<"u"?module.exports=u(require("vue")):typeof define=="function"&&define.amd?define(["vue"],u):(e=typeof globalThis<"u"?globalThis:e||self,e.MasonryWall=u(e.Vue))})(this,function(e){"use strict";const u=["data-index"],E=e.defineComponent({__name:"masonry-wall",props:{columnWidth:{default:400},items:{},gap:{default:0},rtl:{type:Boolean,default:!1},ssrColumns:{default:0},scrollContainer:{default:null},minColumns:{},maxColumns:{},keyMapper:{type:Function,default:(a,f,B,s)=>s}},emits:["redraw","redrawSkip"],setup(a,{emit:f}){const B=a,{columnWidth:s,items:i,gap:d,rtl:x,ssrColumns:g,scrollContainer:k,minColumns:y,maxColumns:w,keyMapper:R}=e.toRefs(B),p=e.ref([]),m=e.ref();function C(t,n,l,o){const r=_(l);return o+n+r<=t?C(t,n,l+1,o+n+r):l}function _(t){const n=Array.isArray(s.value)?s.value:[s.value];return n[t%n.length]}function M(){const t=C(m.value.getBoundingClientRect().width,d.value,0,-d.value),n=$(S(t));return n>0?n:1}function S(t){const n=w==null?void 0:w.value;return n&&t>n?n:t}function $(t){const n=y==null?void 0:y.value;return n&&t<n?n:t}function T(t){return[...new Array(t)].map(()=>[])}if(g.value>0){const t=T(g.value);i.value.forEach((n,l)=>t[l%g.value].push(l)),p.value=t}async function b(t){if(t>=i.value.length)return;await e.nextTick();const n=[...m.value.children];x.value&&n.reverse();const l=n.reduce((o,r)=>r.getBoundingClientRect().height<o.getBoundingClientRect().height?r:o);p.value[+l.dataset.index].push(t),await b(t+1)}async function h(t=!1){if(p.value.length===M()&&!t){f("redrawSkip");return}p.value=T(M());const n=k==null?void 0:k.value,l=n?n.scrollTop:window.scrollY;await b(0),n?n.scrollBy({top:l-n.scrollTop}):window.scrollTo({top:l}),f("redraw")}const c=typeof ResizeObserver>"u"?void 0:new ResizeObserver(()=>h());return e.onMounted(()=>{h(),c==null||c.observe(m.value)}),e.onBeforeUnmount(()=>c==null?void 0:c.unobserve(m.value)),e.watch([i,x],()=>h(!0)),e.watch([s,d,y,w],()=>h()),(t,n)=>(e.openBlock(),e.createElementBlock("div",{ref_key:"wall",ref:m,class:"masonry-wall",style:e.normalizeStyle({display:"flex",gap:`${e.unref(d)}px`})},[(e.openBlock(!0),e.createElementBlock(e.Fragment,null,e.renderList(p.value,(l,o)=>(e.openBlock(),e.createElementBlock("div",{key:o,class:"masonry-column","data-index":o,style:e.normalizeStyle({display:"flex","flex-basis":`${_(o)}px`,"flex-direction":"column","flex-grow":1,gap:`${e.unref(d)}px`,height:["-webkit-max-content","-moz-max-content","max-content"],"min-width":0})},[(e.openBlock(!0),e.createElementBlock(e.Fragment,null,e.renderList(l,(r,W)=>(e.openBlock(),e.createElementBlock("div",{key:e.unref(R)(e.unref(i)[r],o,W,r),class:"masonry-item"},[e.renderSlot(t.$slots,"default",{item:e.unref(i)[r],column:o,row:W,index:r},()=>[e.createTextVNode(e.toDisplayString(e.unref(i)[r]),1)])]))),128))],12,u))),128))],4))}});return(()=>{const a=E;return a.install=f=>{f.component("MasonryWall",a)},a})()});
